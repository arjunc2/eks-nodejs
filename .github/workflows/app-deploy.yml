name: Node js app deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.30.1' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Build Docker image
      run: |
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        echo "Building image: $IMAGE_URI"
        docker build -t $IMAGE_URI .

    - name: Push image to Amazon ECR
      run: |
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        docker push $IMAGE_URI

    - name: Update manifest file with new image (optional)
      run: |
        sed -i "s|image: .*|image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}|" k8s/deployment.yaml

    # - name: Build, tag, and push docker image to Amazon ECR
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: nagecr
    #     IMAGE_TAG: 1.1
    #   run: |
    #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
    #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    # - name: Update kube config
    #   run: aws eks update-kubeconfig --name nageks
    
    # - name: Deploy to EKS
    #   run: |
    #     kubectl apply -f deployment.yaml
    #     kubectl apply -f service.yaml